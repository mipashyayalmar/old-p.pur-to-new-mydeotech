
# change at only prasad side (mipashya)
# sudha biradar changes
"""
Django settings for pandharpur project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from .juzmin import JAZZMIN_SETTINGS

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


SECRET_KEY = 'django-insecure-^8i_d9#bdhzrmd^livzx7@+@taatb64p_#z-r$r@_g(=x-6r!g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = [
]



CSRF_TRUSTED_ORIGINS = [
    'https://f91b-103-200-214-111.ngrok-free.app', 
    'http://f91b-103-200-214-111.ngrok-free.app',   
]

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # Required for django-allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',  # Uncomment if you use Google provider
    'myapp',
    'user',
]

SITE_ID = 1

MIDDLEWARE = [
    # Add the account middleware:
    "allauth.account.middleware.AccountMiddleware",

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = [

    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Social account settings for Google OAuth with django-allauth
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        # Client credentials for Google OAuth 2.0
        'APP': {
            'client_id': '265828565476-8vojhf23bstlu0o7al3ssk8uv0ni9qcd.apps.googleusercontent.com',
            'secret': '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',
            'key': ''  # Not required for OAuth 2.0
        },
        # Scopes to request email and profile data
        'SCOPE': [
            'email',  # Requests userinfo.email scope
            'profile',  # Requests userinfo.profile scope
        ],
        # Additional auth parameters
        'AUTH_PARAMS': {
            'access_type': 'offline',  # Enables refresh token for long-term access
            'prompt': 'consent',  # Forces consent screen to ensure scope approval
        },
        # Map Google userinfo fields to SocialAccount.extra_data
        'FIELD_MAPPING': {
            'email': 'email',
            'given_name': 'first_name',
            'family_name': 'last_name',
            'name': 'full_name',
            'picture': 'picture',
            'locale': 'locale',
            'hd': 'hosted_domain',
            'sub': 'google_id',
            'email_verified': 'email_verified',
        }
    }
}

# Ensure email is required and queried
SOCIALACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_QUERY_EMAIL = True

# Optional: Auto-signup and login settings
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_LOGIN_ON_GET = True

LOGIN_REDIRECT_URL = 'user:user_profile_edit'
SOCIAL_AUTH_LOGIN_REDIRECT_URL = 'user:user_profile_edit'
SOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'
LOGOUT_REDIRECT_URL = '/'


#ACCOUNT_LOGIN_ON_GET = True  # Optional, use with caution

# LOGIN_REDIRECT_URL = 'user:user_profile_edit'
# LOGOUT_REDIRECT_URL = '/'
# ACCOUNT_LOGOUT_ON_GET = True
# SOCIALACCOUNT_LOGIN_ON_GET = True




ROOT_URLCONF = 'pandharpur.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pandharpur.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


import os

# Other settings...

# Media settings
MEDIA_URL = '/media/'  # URL to access media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Path to store uploaded media files

# Static files settings (ensure you have this configured as well)
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


# mail
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_PASSWORD = 'ypht znpd shll frhd'
DEFAULT_FROM_EMAIL = 'mipashya@gmail.com'
EMAIL_HOST_USER = 'mipashya@gmail.com'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_ACTIVE_FIELD = 'is_active'
EMAIL_SERVER = 'smtp.gmail.com'


# settings.py
AUTH_USER_MODEL = 'user.User'
